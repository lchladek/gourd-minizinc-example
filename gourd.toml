# Example `gourd.toml` for the Gourd Experiment Scheduler
# See the manual page for gourd(1)
#
# "MiniZinc Example"
# An example of using Gourd to process MiniZinc inputs.

# Put all outputs and metrics in the same folder
output_path = "experiments"
metrics_path = "experiments"
experiments_folder = "experiments"

# this file is auto-generated by the script
input_schema = "resources/input_list.toml"

[input]

[git_resource.pumpkin-solver]
submodule_name = "Pumpkin"
compile_script = "../scripts/compile_pumpkin.sh"
# this file doesn't actually need to be fetched,
# but if it exists the compile is cached
file = "minizinc/pumpkin.msc"
store = "resources/pumpkin.msc"

[git_resource.minizinc-benchmarks]
submodule_name = "minizinc-benchmarks"
# traverses the directory, making a list of input combinations
compile_script = "../scripts/generate_input_list.sh"
file = "input_list.toml"
store = "resources/input_list.toml"

[program.minizinc]
# This needs to be adjusted according to the location of
# your MiniZinc binary
binary = "/opt/homebrew/bin/minizinc"
arguments = ["-v", "--time-limit", "600000", "--solver", "../../../../Pumpkin/minizinc/pumpkin.msc"]
# Tip: add multiple 'program' entries for comparing different
# solvers / parameters
